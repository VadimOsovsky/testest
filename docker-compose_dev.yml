version: "3"

services:
  traefik:
    image: traefik:v2.2
    command: --api.insecure=true --providers.docker
    restart: unless-stopped
#    security_opt:
#      - no-new-privileges:true
    ports:
      - 80:80
      - 443:443
#      - 8082:8082
    volumes:
#      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/traefik.yml:ro
    labels:
      - "traefik.enable=true"
#      - "traefik.http.routers.traefik.entrypoints=https"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${HOST}`)"
      - "traefik.http.routers.traefik.service=api@internal"
#      - "traefik.http.services.traefik-traefik.loadbalancer.server.port=888"

#  db:
#    image: mysql
#    command: --default-authentication-plugin=mysql_native_password
#    restart: always
##    ports:
##      - 3306:3306
#    environment:
#      MYSQL_ROOT_PASSWORD: testtest

  ocr:
    build: ./ocr
    command: npm start
    volumes:
      - "./ocr:/var/www/ocr_pass/ocr"
    ports:
      - 3000:3000
#    depends_on:
#      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ocr.rule=Host(`${HOST}`) && PathPrefix(`/api/ocr/`)"

  web_app:
    build: ./web_app
    command: yarn dev
    volumes:
      - "./web_app:/var/www/ocr_pass/web_app"
    ports:
      - 8081:8081
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web_app.rule=Host(`${HOST}`)"
